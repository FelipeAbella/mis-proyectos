/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package figurasHerencia;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JOptionPane;

/**
 *
 * @author abell
 */
public class Pizarra extends javax.swing.JFrame {

    /**
     * Creates new form Pizarra
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setToolTipText("");

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setToolTipText("");
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel6.setText("DibujaPuntos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(34, 34, 34))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setToolTipText("");
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        jLabel2.setText("DibujaCÃ­rculos");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(44, 44, 44))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setToolTipText("");
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        jLabel3.setText("Clear Screen");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(200, 200, 200))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setToolTipText("");
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel4.setText("DibujaEsfera");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(38, 38, 38))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setToolTipText("");
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        jLabel5.setText("DibujaCilindro");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(33, 33, 33))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));
        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        jLabel1.setText("DibujaConos");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(47, 47, 47))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));
        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });

        jLabel7.setText("DibujaRectÃ¡ngulos");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
        });

        jLabel8.setText("DibujaPirÃ¡mideRectangular");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));
        jPanel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        jLabel9.setText("DibujaPrismaRectangular");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jPanel12.setBackground(new java.awt.Color(204, 204, 204));
        jPanel12.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel12MouseClicked(evt);
            }
        });

        jLabel10.setText("DibujaTriÃ¡ngulos");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));
        jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel13MouseClicked(evt);
            }
        });

        jLabel11.setText("DibujaPirÃ¡mideTriangular");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        jPanel14.setBackground(new java.awt.Color(204, 204, 204));
        jPanel14.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel14MouseClicked(evt);
            }
        });

        jLabel12.setText("DibujaPrismaTriangular");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        this.crearPunto();
        this.dibujarPunto();
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        this.crearCirculo();
        this.dibujarCirculo();
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.jPanel1.printAll(this.pintor);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        this.crearEsfera();
        this.dibujarEsfera();
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        this.crearCilindro();
        this.dibujarCilindro();
    }//GEN-LAST:event_jPanel7MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        this.crearCono();
        this.dibujarCono();
    }//GEN-LAST:event_jPanel8MouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        this.crearRectangulo();
        this.dibujarRectangulo();
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        this.crearPiramideRectangular();
        this.dibujarPiramideRectangular();
    }//GEN-LAST:event_jPanel10MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked

    }//GEN-LAST:event_jLabel9MouseClicked

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        this.crearPrismaRectangular();
        this.dibujarPrismaRectangular();
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jPanel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseClicked
        this.crearTriangulo();
        this.dibujarTriangulo();
    }//GEN-LAST:event_jPanel12MouseClicked

    private void jPanel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseClicked
        this.crearPiramideTriangular();
        this.dibujarPiramideTriangular();
    }//GEN-LAST:event_jPanel13MouseClicked

    private void jPanel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseClicked
        this.crearPrismaTriangular();
        this.dibujarPrismaTriangular();
    }//GEN-LAST:event_jPanel14MouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration//GEN-END:variables

    private Graphics pintor;
    private Punto puntico;
    private Circulo circulito;
    private Esfera esferita;
    private Cilindro cilindrito;
    private Cono conito;
    private Rectangulo rectangulito;
    private PiramideRectangular PiramideRect;
    private PrismaRectangular PrismaRect;
    private Triangulo triangulito;
    private PiramideTriangular PiramideTri;
    private PrismaRectangular PrismaTri;
    
    public static void main(String args[]) {
     new Pizarra();   
    }
    
    public Pizarra() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.pintor=this.jPanel1.getGraphics();
    }
    
    private void setColor()
    {
        int r,g,b;
        r=(int)(255*Math.random());
        g=(int)(255*Math.random());
        b=(int)(255*Math.random());
        Color colorcito=new Color(r,g,b);
        this.pintor.setColor(colorcito);
    }
    
    private void crearPunto()
    {
        int x,y;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del punto: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del punto: "));
        this.puntico=new Punto(x,y);
    }
    
    private void dibujarPunto()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        this.pintor.drawOval(this.puntico.getX(), this.puntico.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades del punto? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.puntico.getX()+", "+this.puntico.getY()+")";
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearCirculo()
    {
        int x,y,radio;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del cÃ­rculo: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del cÃ­rculo: "));
        radio=Integer.parseInt(JOptionPane.showInputDialog("Digite el radio del cÃ­rculo: "));
        this.circulito=new Circulo(x,y,radio);
    }
    
    private void dibujarCirculo()
    {
        int respuesta;
        String propiedades="";
        this.setColor();
        this.pintor.drawOval(this.circulito.getX()-this.circulito.getRadio(), this.circulito.getY()-this.circulito.getRadio(), 2*this.circulito.getRadio(),2*this.circulito.getRadio());
        this.pintor.drawOval(this.circulito.getX(), this.circulito.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades del cÃ­rculo? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.circulito.getX()+", "+this.circulito.getY()+")\n"
                    + "Radio: "+this.circulito.getRadio()+"\n"
                    + "PerÃ­metro: "+this.circulito.getPerimetro()+"\n"
                    + "Ãrea: "+this.circulito.getArea();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearEsfera()
    {
        int x,y,radio;
        
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x de la esfera: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y de la esfera: "));
        radio=Integer.parseInt(JOptionPane.showInputDialog("Digite el radio de la esfera: "));
        this.esferita=new Esfera(x,y,radio);
    }
    
    private void dibujarEsfera()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        this.pintor.drawOval(this.esferita.getX()-this.esferita.getRadio(), this.esferita.getY()-this.esferita.getRadio(), 2*this.esferita.getRadio(),2*this.esferita.getRadio());
        this.pintor.fillOval(this.esferita.getX()-this.esferita.getRadio(), this.esferita.getY()-this.esferita.getRadio()+5*this.esferita.getRadio()/6,2*this.esferita.getRadio(),this.esferita.getRadio()/3);
        this.setColor();
        this.pintor.drawOval(this.esferita.getX(),this.esferita.getY(), 1, 1);
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades de la esfera? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.esferita.getX()+", "+this.esferita.getY()+")\n"
                    + "Radio: "+this.esferita.getRadio()+"\n"
                    + "Volumen: "+this.esferita.getVolumen()+"\n"
                    + "Ãrea: "+this.esferita.getArea();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearCilindro()
    {
        int x,y,radio,altura;
        
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x de la base del cilindro: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y de la base del cilindro: "));
        radio=Integer.parseInt(JOptionPane.showInputDialog("Digite el radio de la base del cilindro: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura del cilindro: "));
        this.cilindrito=new Cilindro(x,y,radio,altura);
    }
    
    private void dibujarCilindro()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        
        this.pintor.fillOval(this.cilindrito.getX()-this.cilindrito.getRadio(), this.cilindrito.getY()-this.cilindrito.getRadio()+5*this.cilindrito.getRadio()/6,2*this.cilindrito.getRadio(),this.cilindrito.getRadio()/3);
        this.pintor.fillOval(this.cilindrito.getX()-this.cilindrito.getRadio(), this.cilindrito.getY()-this.cilindrito.getRadio()+5*this.cilindrito.getRadio()/6-this.cilindrito.getAltura(),2*this.cilindrito.getRadio(),this.cilindrito.getRadio()/3);        
        
        this.pintor.drawLine(this.cilindrito.getX()-this.cilindrito.getRadio(), this.cilindrito.getY(), this.cilindrito.getX()-this.cilindrito.getRadio(), this.cilindrito.getY()-this.cilindrito.getAltura());
        this.pintor.drawLine(this.cilindrito.getX()+this.cilindrito.getRadio(), this.cilindrito.getY(), this.cilindrito.getX()+this.cilindrito.getRadio(), this.cilindrito.getY()-this.cilindrito.getAltura());
        
        this.setColor();
        this.pintor.drawOval(this.cilindrito.getX(),this.cilindrito.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades del cilindro? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.cilindrito.getX()+", "+this.cilindrito.getY()+")\n"
                    + "Radio: "+this.cilindrito.getRadio()+"\n"
                    + "Altura: "+this.cilindrito.getAltura()+"\n"
                    + "Volumen: "+this.cilindrito.getVolumen()+"\n"
                    + "Ãrea: "+this.cilindrito.getArea();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearCono()
    {
        int x,y,radio,altura,alturaInclinada;
        
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x de la base del cono: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y de la base del cono: "));
        radio=Integer.parseInt(JOptionPane.showInputDialog("Digite el radio de la base del cono: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura del cono: "));
        this.conito=new Cono(x,y,radio,altura);
    }
    
    private void dibujarCono()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        
        this.pintor.fillOval(this.conito.getX()-this.conito.getRadio(), this.conito.getY()-this.conito.getRadio()+5*this.conito.getRadio()/6,2*this.conito.getRadio(),this.conito.getRadio()/3);
        
        this.pintor.drawLine(this.conito.getX()-this.conito.getRadio(), this.conito.getY(), this.conito.getX(), this.conito.getY()-this.conito.getAltura());
        this.pintor.drawLine(this.conito.getX()+this.conito.getRadio(), this.conito.getY(), this.conito.getX(), this.conito.getY()-this.conito.getAltura());
        
        this.setColor();
        this.pintor.drawOval(this.conito.getX(),this.conito.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades del cono? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.conito.getX()+", "+this.conito.getY()+")\n"
                    + "Radio: "+this.conito.getRadio()+"\n"
                    + "Altura: "+this.conito.getAltura()+"\n"
                    + "Altura inclinada: "+this.conito.getAlturaInclinada()+"\n"
                    + "Volumen: "+this.conito.getVolumen()+"\n"
                    + "Ãrea: "+this.conito.getArea();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearRectangulo()
    {
        int x,y, ancho, largo;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del rectÃ¡ngulo: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del rectÃ¡ngulo: "));
        largo=Integer.parseInt(JOptionPane.showInputDialog("Digite el largo del rectÃ¡ngulo: "));
        ancho=Integer.parseInt(JOptionPane.showInputDialog("Digite el ancho del rectÃ¡ngulo: "));
        this.rectangulito=new Rectangulo(x,y,largo,ancho);
    }
    
    private void dibujarRectangulo()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        this.pintor.drawLine(this.rectangulito.getX(), this.rectangulito.getY(), this.rectangulito.getX()+this.rectangulito.getLargo(), this.rectangulito.getY());
        this.pintor.drawLine(this.rectangulito.getX(), this.rectangulito.getY(), this.rectangulito.getX(), this.rectangulito.getY()+this.rectangulito.getAncho());
        this.pintor.drawLine(this.rectangulito.getX(), this.rectangulito.getY()+this.rectangulito.getAncho(), this.rectangulito.getX()+this.rectangulito.getLargo(), this.rectangulito.getY()+this.rectangulito.getAncho());
        this.pintor.drawLine(this.rectangulito.getX()+this.rectangulito.getLargo(), this.rectangulito.getY(), this.rectangulito.getX()+this.rectangulito.getLargo(), this.rectangulito.getY()+this.rectangulito.getAncho());
        
        this.setColor();
        this.pintor.drawOval(this.rectangulito.getX(), this.rectangulito.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades del rectÃ¡ngulo? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.rectangulito.getX()+", "+this.rectangulito.getY()+")\n"
                    + "Largo: "+this.rectangulito.getLargo()+"\n"
                    + "Ancho: "+this.rectangulito.getAncho();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearPiramideRectangular()
    {
        int x,y, ancho, largo, altura;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x de la pirÃ¡mide rectangular: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y de la pirÃ¡mide rectangular: "));
        largo=Integer.parseInt(JOptionPane.showInputDialog("Digite el largo de la pirÃ¡mide rectangular: "));
        ancho=Integer.parseInt(JOptionPane.showInputDialog("Digite el ancho de la pirÃ¡mide rectangular: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura de la pirÃ¡mide rectangular: "));
        this.PiramideRect=new PiramideRectangular(x,y,largo,ancho,altura);
    }
    
    private void dibujarPiramideRectangular()
    {
        int respuesta;
        String propiedades="";
        
        this.setColor();
        
        this.pintor.drawLine(this.PiramideRect.getX(), this.PiramideRect.getY(), this.PiramideRect.getX()+this.PiramideRect.getLargo(), this.PiramideRect.getY());
        this.pintor.drawLine(this.PiramideRect.getX(), this.PiramideRect.getY(), this.PiramideRect.getX()+((this.PiramideRect.getLargo())/2), this.PiramideRect.getY()-this.PiramideRect.getAncho());
        this.pintor.drawLine(this.PiramideRect.getX()+((this.PiramideRect.getLargo())/2), this.PiramideRect.getY()-this.PiramideRect.getAncho(), this.PiramideRect.getX()+this.PiramideRect.getLargo()+((this.PiramideRect.getLargo())/2), this.PiramideRect.getY()-this.PiramideRect.getAncho());
        this.pintor.drawLine(this.PiramideRect.getX()+this.PiramideRect.getLargo(), this.PiramideRect.getY(), this.PiramideRect.getX()+this.PiramideRect.getLargo()+((this.PiramideRect.getLargo())/2), this.PiramideRect.getY()-this.PiramideRect.getAncho());
        
        this.pintor.drawLine(this.PiramideRect.getX(), this.PiramideRect.getY(), (this.PiramideRect.getX()+this.PiramideRect.getLargo()/2)+(this.PiramideRect.getAncho()/2), this.PiramideRect.getY()-this.PiramideRect.getAltura()-((this.PiramideRect.getAncho())/2));
        this.pintor.drawLine(this.PiramideRect.getX()+this.PiramideRect.getLargo()/2, this.PiramideRect.getY()-this.PiramideRect.getAncho(), this.PiramideRect.getX()+this.PiramideRect.getLargo()/2+this.PiramideRect.getAncho()/2, this.PiramideRect.getY()-this.PiramideRect.getAltura()-(this.PiramideRect.getAncho()/2));
        this.pintor.drawLine(this.PiramideRect.getX()+this.PiramideRect.getLargo(),this.PiramideRect.getY(),(this.PiramideRect.getX()+this.PiramideRect.getLargo()/2)+(this.PiramideRect.getAncho()/2),this.PiramideRect.getY()-this.PiramideRect.getAltura()-((this.PiramideRect.getAncho())/2));
        this.pintor.drawLine(this.PiramideRect.getX()+this.PiramideRect.getLargo()+(this.PiramideRect.getLargo()/2),this.PiramideRect.getY()-this.PiramideRect.getAncho(),(this.PiramideRect.getX()+this.PiramideRect.getLargo()/2)+(this.PiramideRect.getAncho()/2),this.PiramideRect.getY()-this.PiramideRect.getAltura()-((this.PiramideRect.getAncho())/2));
        
        this.setColor();
        this.pintor.drawOval(this.PiramideRect.getX(),this.PiramideRect.getY(), 1, 1);
        
        respuesta=Integer.parseInt(JOptionPane.showInputDialog("Â¿Desea ver las propiedades de la pirÃ¡mide rectangular? (1=SÃ­, 2=No)"));
        if(respuesta==1)
        {
            propiedades+="Centro: ("+this.PiramideRect.getX()+", "+this.PiramideRect.getY()+")\n"
                    + "Largo: "+this.PiramideRect.getLargo()+"\n"
                    + "Ancho: "+this.PiramideRect.getAncho()+"\n"
                    + "Altura: "+this.PiramideRect.getAltura()+"\n"
                    + "Altura inclinada: "+this.PiramideRect.getAlturaInclinada()+"\n"
                    + "Volumen: "+this.PiramideRect.getVolumen()+"\n"
                    + "Ãrea: "+this.PiramideRect.getArea();
            JOptionPane.showMessageDialog(null, propiedades);
        }
    }
    
    private void crearPrismaRectangular()
    {
        int x,y, ancho, largo, altura;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del prisma rectangular: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del prisma rectangular: "));
        largo=Integer.parseInt(JOptionPane.showInputDialog("Digite el largo del prisma rectangular: "));
        ancho=Integer.parseInt(JOptionPane.showInputDialog("Digite el ancho del prisma rectangular: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura del prisma rectangular: "));
        this.PrismaRect=new PrismaRectangular(x,y,largo,ancho,altura);
    }
    
    private void dibujarPrismaRectangular()
    {
        
    }
    
    private void crearTriangulo()
    {
        int x,y, lado, altura;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del triÃ¡ngulo: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del triÃ¡ngulo: "));
        lado=Integer.parseInt(JOptionPane.showInputDialog("Digite la longitud del lado del triÃ¡ngulo: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura del triÃ¡ngulo: "));
        this.triangulito=new Triangulo(x,y,lado,altura);
    }
    
    private void dibujarTriangulo()
    {
        
    }
    
    private void crearPiramideTriangular()
    {
        int x,y, lado, altura;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x de la pirÃ¡mide triangular: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y de la pirÃ¡mide triangular: "));
        lado=Integer.parseInt(JOptionPane.showInputDialog("Digite la longitud de la pirÃ¡mide triangular: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura de la pirÃ¡mide triangular: "));
        this.PiramideTri=new PiramideTriangular(x,y,lado,altura);
    }
    
    private void dibujarPiramideTriangular()
    {
        
    }
    
    private void crearPrismaTriangular()
    {
        int x,y, ancho, largo, altura;
        x=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada x del prisma triangular: "));
        y=Integer.parseInt(JOptionPane.showInputDialog("Digite la coordenada y del prisma triangular: "));
        largo=Integer.parseInt(JOptionPane.showInputDialog("Digite el largo del prisma triangular: "));
        ancho=Integer.parseInt(JOptionPane.showInputDialog("Digite el ancho del prisma triangular: "));
        altura=Integer.parseInt(JOptionPane.showInputDialog("Digite la altura del prisma triangular: "));
        this.PrismaTri=new PrismaTriangular(x,y,largo,ancho,altura);
    }
    
    private void dibujarPrismaTriangular()
    {
        
    }
}